{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/qunzhiwwang/Documents/GitHub/React-BurgerBuilder/src/components/Layout/Layout.js\";\n// layout can wrap another component around\nimport React from 'react';\nimport classes from '../Layout/Layout.module.css';\nimport Aux from '../../hoc/Aux';\nimport Toolbar from '../Navigation/ToolBar/Toolbar';\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\n\nconst layout = props =>\n/*#__PURE__*/\n// to handle adjecnet jsx elements, \n// frist: we could return them in to an array\n// second: we can use higher order components OR react.fragment\n_jsxDEV(Aux, {\n  children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.Content,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, this);\n\nexport default layout;","map":{"version":3,"sources":["/Users/qunzhiwwang/Documents/GitHub/React-BurgerBuilder/src/components/Layout/Layout.js"],"names":["React","classes","Aux","Toolbar","SideDrawer","layout","props","Content","children"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;;AACA,MAAMC,MAAM,GAAIC,KAAD;AAAA;AACX;AACA;AACA;AACA,QAAC,GAAD;AAAA,0BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI;AAAM,IAAA,SAAS,EAAIL,OAAO,CAACM,OAA3B;AAAA,cAEKD,KAAK,CAACE;AAFX;AAAA;AAAA;AAAA;AAAA,UAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;;AAcA,eAAeH,MAAf","sourcesContent":["// layout can wrap another component around\nimport React from 'react';\n\nimport classes from '../Layout/Layout.module.css';\nimport Aux from '../../hoc/Aux';\nimport Toolbar from '../Navigation/ToolBar/Toolbar';\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\nconst layout = (props) => (\n    // to handle adjecnet jsx elements, \n    // frist: we could return them in to an array\n    // second: we can use higher order components OR react.fragment\n    <Aux>\n        <Toolbar />\n        <main className = {classes.Content}>\n            {/* output components wrapped with this layout. */}\n            {props.children}\n        </main>\n    </Aux>\n    \n);\n\nexport default layout;"]},"metadata":{},"sourceType":"module"}