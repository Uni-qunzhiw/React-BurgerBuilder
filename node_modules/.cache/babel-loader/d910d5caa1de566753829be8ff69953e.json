{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/qunzhiwwang/Documents/GitHub/React-BurgerBuilder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Aux from \"../../hoc/Aux\";\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nconst INGRREDIENT_PRICE = {\n  salad: 1,\n  cheese: 1,\n  meat: 3,\n  bacon: 2\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCounted = oldCount + 1; // update in immutable way;\n\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCounted;\n      const priceAddition = INGRREDIENT_PRICE[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCounted = oldCount - 1; // update in immutable way;\n\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCounted;\n      const priceDeduction = INGRREDIENT_PRICE[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseCancleHandler = () => this.setState({\n      purchasing: false\n    });\n\n    this.purchaseContinueHandler = () => {\n      // alert('You continue!');\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: 'Max SchwarzmÃ¼ller',\n          address: {\n            street: 'Teststreet 1',\n            zipCode: '41351',\n            country: 'Germany'\n          },\n          email: 'test@test.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      }).catch(error => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      });\n    };\n  }\n\n  // have to receive updated ingredients otherwise we might not be able to access\n  // to updated ingredients when setstate is called.\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, cur) => {\n      return sum + cur;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancleHandler,\n        children: /*#__PURE__*/_jsxDEV(OrderSummary, {\n          summary: this.state.totalPrice.toFixed(2),\n          purchaseCanceled: this.purchaseCancleHandler,\n          purchaseContinue: this.purchaseContinueHandler,\n          ingredients: this.state.ingredients\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Burger, {\n        ingredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientDeleted: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        purchasable: this.state.purchasable,\n        ordered: this.purchaseHandler,\n        price: this.state.totalPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/qunzhiwwang/Documents/GitHub/React-BurgerBuilder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","BuildControls","Aux","Modal","OrderSummary","axios","INGRREDIENT_PRICE","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","purchaseHandler","setState","addIngredientHandler","type","oldCount","updatedCounted","updatedIngredients","priceAddition","oldPrice","newPrice","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseCancleHandler","purchaseContinueHandler","order","price","customer","name","address","street","zipCode","country","email","deliveryMethod","post","then","response","catch","error","sum","Object","keys","map","igKey","reduce","cur","render","disabledInfo","key","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Aux from \"../../hoc/Aux\";\nimport Modal from'../../components/UI/Modal/Modal';\nimport OrderSummary from  '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\n\nconst INGRREDIENT_PRICE = {\n    salad: 1,\n    cheese: 1,\n    meat: 3,\n    bacon: 2\n}\n\nclass BurgerBuilder extends Component {\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {...}\n    // }\n\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        totalPrice: 4,\n        purchasable : false,\n        purchasing: false,\n        loading: false\n    };\n    // if not using arrow function, cannot use \"this\"\n    purchaseHandler = () => {\n        this.setState({purchasing : true});\n    };\n\n    // have to receive updated ingredients otherwise we might not be able to access\n    // to updated ingredients when setstate is called.\n    updatePurchaseState (ingredients) {\n\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey];\n            })\n            .reduce((sum, cur) => {\n                return sum + cur; \n            }, 0);\n        this.setState({purchasable: sum > 0});\n    };\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCounted = oldCount + 1;\n        // update in immutable way;\n        const updatedIngredients = {\n           ...this.state.ingredients \n        };\n        updatedIngredients[type] = updatedCounted;\n        const priceAddition = INGRREDIENT_PRICE[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\n        this.updatePurchaseState(updatedIngredients);\n    };\n\n\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if( oldCount <= 0) {\n            return;\n        }\n        const updatedCounted = oldCount - 1;\n        // update in immutable way;\n        const updatedIngredients = {\n           ...this.state.ingredients \n        };\n        updatedIngredients[type] = updatedCounted;\n        const priceDeduction = INGRREDIENT_PRICE[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    };\n\n    purchaseCancleHandler =  () => (\n        this.setState({purchasing: false})\n    )\n    purchaseContinueHandler = () => {\n        // alert('You continue!');\n        this.setState( { loading: true } );\n        const order = {\n            ingredients: this.state.ingredients,\n            price: this.state.totalPrice,\n            customer: {\n                name: 'Max SchwarzmÃ¼ller',\n                address: {\n                    street: 'Teststreet 1',\n                    zipCode: '41351',\n                    country: 'Germany'\n                },\n                email: 'test@test.com'\n            },\n            deliveryMethod: 'fastest'\n        }\n        axios.post( '/orders.json', order )\n            .then( response => {\n                this.setState( { loading: false, purchasing: false } );\n            } )\n            .catch( error => {\n                this.setState( { loading: false, purchasing: false } );\n            } );\n    }\n\n    render () {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n\n        for( let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        }\n\n        return (\n            <Aux>\n                <Modal \n                    show={this.state.purchasing} \n                    modalClosed = {this.purchaseCancleHandler}>\n                        <OrderSummary \n                            summary = {this.state.totalPrice.toFixed(2)}\n                            purchaseCanceled = {this.purchaseCancleHandler}\n                            purchaseContinue = {this.purchaseContinueHandler}\n                            ingredients = {this.state.ingredients} />\n                </Modal>\n                <Burger ingredients = {this.state.ingredients}/>\n                <BuildControls \n                    ingredientAdded = {this.addIngredientHandler}\n                    ingredientDeleted = {this.removeIngredientHandler}\n                    disabled={disabledInfo}\n                    purchasable = {this.state.purchasable}\n                    ordered = {this.purchaseHandler}\n                    price={this.state.totalPrice} />\n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;\n"]},"metadata":{},"sourceType":"module"}