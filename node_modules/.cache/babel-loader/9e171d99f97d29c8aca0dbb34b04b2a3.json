{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/qunzhiwwang/Documents/GitHub/React-BurgerBuilder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Aux from \"../../hoc/Aux\";\nconst INGRREDIENT_PRICE = {\n  salad: 1,\n  cheese: 1,\n  meat: 3,\n  bacon: 2\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 9.85\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCounted = oldCount + 1; // update in immutable way;\n\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCounted;\n      const priceAddition = INGRREDIENT_PRICE[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCounted = oldCount - 1; // update in immutable way;\n\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCounted;\n      const priceDeduction = INGRREDIENT_PRICE[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Build Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Burger, {\n        ingredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n        ingredientAdded: this.addIngredientHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/qunzhiwwang/Documents/GitHub/React-BurgerBuilder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","BuildControls","Aux","INGRREDIENT_PRICE","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","addIngredientHandler","type","oldCount","updatedCounted","updatedIngredients","priceAddition","oldPrice","newPrice","setState","removeIngredientHandler","priceDeduction","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,qDAA1B;AACA,OAAOC,GAAP,MAAgB,eAAhB;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,CADe;AAEtBC,EAAAA,MAAM,EAAE,CAFc;AAGtBC,EAAAA,IAAI,EAAE,CAHgB;AAItBC,EAAAA,KAAK,EAAE;AAJe,CAA1B;;AAOA,MAAMC,aAAN,SAA4BT,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAOlCU,KAPkC,GAO1B;AACJC,MAAAA,WAAW,EAAE;AACTN,QAAAA,KAAK,EAAE,CADE;AAETG,QAAAA,KAAK,EAAE,CAFE;AAGTF,QAAAA,MAAM,EAAE,CAHC;AAITC,QAAAA,IAAI,EAAE;AAJG,OADT;AAOJK,MAAAA,UAAU,EAAE;AAPR,KAP0B;;AAAA,SAiBlCC,oBAjBkC,GAiBVC,IAAD,IAAU;AAC7B,YAAMC,QAAQ,GAAG,KAAKL,KAAL,CAAWC,WAAX,CAAuBG,IAAvB,CAAjB;AACA,YAAME,cAAc,GAAGD,QAAQ,GAAG,CAAlC,CAF6B,CAG7B;;AACA,YAAME,kBAAkB,GAAG,EACxB,GAAG,KAAKP,KAAL,CAAWC;AADU,OAA3B;AAGAM,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAA2BE,cAA3B;AACA,YAAME,aAAa,GAAGd,iBAAiB,CAACU,IAAD,CAAvC;AACA,YAAMK,QAAQ,GAAG,KAAKT,KAAL,CAAWE,UAA5B;AACA,YAAMQ,QAAQ,GAAGD,QAAQ,GAAGD,aAA5B;AACA,WAAKG,QAAL,CAAc;AAACT,QAAAA,UAAU,EAAEQ,QAAb;AAAuBT,QAAAA,WAAW,EAAEM;AAApC,OAAd;AACH,KA7BiC;;AAAA,SA+BlCK,uBA/BkC,GA+BPR,IAAD,IAAU;AAChC,YAAMC,QAAQ,GAAG,KAAKL,KAAL,CAAWC,WAAX,CAAuBG,IAAvB,CAAjB;AACA,YAAME,cAAc,GAAGD,QAAQ,GAAG,CAAlC,CAFgC,CAGhC;;AACA,YAAME,kBAAkB,GAAG,EACxB,GAAG,KAAKP,KAAL,CAAWC;AADU,OAA3B;AAGAM,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAA2BE,cAA3B;AACA,YAAMO,cAAc,GAAGnB,iBAAiB,CAACU,IAAD,CAAxC;AACA,YAAMK,QAAQ,GAAG,KAAKT,KAAL,CAAWE,UAA5B;AACA,YAAMQ,QAAQ,GAAGD,QAAQ,GAAGI,cAA5B;AACA,WAAKF,QAAL,CAAc;AAACT,QAAAA,UAAU,EAAEQ,QAAb;AAAuBT,QAAAA,WAAW,EAAEM;AAApC,OAAd;AACH,KA3CiC;AAAA;;AA6ClCO,EAAAA,MAAM,GAAI;AACN,wBACI,QAAC,GAAD;AAAA,8BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAI,KAAKd,KAAL,CAAWC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,aAAD;AACI,QAAA,eAAe,EAAI,KAAKE;AAD5B;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAvDiC;;AA0DtC,eAAeJ,aAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Aux from \"../../hoc/Aux\";\n\nconst INGRREDIENT_PRICE = {\n    salad: 1,\n    cheese: 1,\n    meat: 3,\n    bacon: 2\n}\n\nclass BurgerBuilder extends Component {\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {...}\n    // }\n\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        totalPrice: 9.85\n    };\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCounted = oldCount + 1;\n        // update in immutable way;\n        const updatedIngredients = {\n           ...this.state.ingredients \n        };\n        updatedIngredients[type] = updatedCounted;\n        const priceAddition = INGRREDIENT_PRICE[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\n    };\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCounted = oldCount - 1;\n        // update in immutable way;\n        const updatedIngredients = {\n           ...this.state.ingredients \n        };\n        updatedIngredients[type] = updatedCounted;\n        const priceDeduction = INGRREDIENT_PRICE[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\n    };\n\n    render () {\n        return (\n            <Aux>\n\n                <div>Build Controls</div>\n                <Burger ingredients = {this.state.ingredients}/>\n                <BuildControls \n                    ingredientAdded = {this.addIngredientHandler} />\n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;\n"]},"metadata":{},"sourceType":"module"}